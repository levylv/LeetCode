class Solution {
    public int maxArea(int[] height) {
        if (height.length <= 1) return 0;
        int left = 0;
        int right = height.length-1;
        int max = 0;
        while (left <= right) {
            int min = Math.min(height[left], height[right]);
            int area = (right - left) * min;
            if (area > max) {
                max = area;
            }
            if (height[left] < height[right]) {
                int tmp = height[left];
                while (left <= right && height[left] <= tmp) {
                    left++;
                }
            } else {
                int tmp = height[right];
                while (left <= right && height[right] <= tmp) {
                    right--;
                }
            }
        }
        return max;
    }
}

//runtime:2 ms
//memory:39.8 MB
